
#Import dataset

dataset <- read.csv("C:/Users/aless/OneDrive/Desktop/Data Science Project/Dataset.csv")
View(dataset)

library(dplyr)

dataset <- dataset %>%
  rename(familiarity = family_history_with_overweight,
         ObesityL = NObeyesdad)

# Check for missing values in each column
missing_values <- colSums(is.na(dataset))
missing_values

#There are no missing values in all the columns
#If there were missing data we could have chose:
#- remove rows with
#dataset_cleaned <- na.omit(dataset)
#- impute missing values
#dataset$Age[is.na(dataset$Age)] <- mean(dataset$Age, na.rm = TRUE)

#Ensure Consistent Data Types-Make sure each column has the correct data type
str(dataset)

#Convert categorical variables to factors
dataset$Gender <- as.factor(dataset$Gender)
dataset$familiarity <- as.factor(dataset$familiarity)
dataset$FAVC <- as.factor(dataset$FAVC)
dataset$CAEC <- as.factor(dataset$CAEC)
dataset$SCC <- as.factor(dataset$SCC)
dataset$SMOKE <- as.factor(dataset$SMOKE)
dataset$FAF <- as.factor(dataset$FAF)
dataset$CALC <- as.factor(dataset$CALC)
dataset$MTRANS <- as.factor(dataset$MTRANS)

# Convert "ObesityL" to an ordered factor with correct levels
dataset$ObesityL <- factor(dataset$ObesityL, 
                             levels = c("Insufficient_Weight", "Normal_Weight", 
                                        "Overweight_Level_I", "Overweight_Level_II", 
                                        "Obesity_Type_I", "Obesity_Type_II", "Obesity_Type_III"), 
                             ordered = TRUE)
#Check after convertions
str(dataset)

#DEEP ANALYSIS of SMOTE's Impact
# Check class distribution of ObesityL
table(dataset$ObesityL)

# Visualize class distribution
library(ggplot2)
ggplot(dataset, aes(x = ObesityL)) +
  geom_bar(fill = "blue", color = "black") +
  theme_minimal() +
  ggtitle("Class Distribution of Obesity Levels")

#COMPARE IT TO THE ORIGINAL ONE, WE HAVE THE DISTRIBUTION IN TE DOCUMENTS
#After applying SMOTE, the distribution appears much more balanced across all categories. Each class has a similar count, which is the intended effect of SMOTE to address class imbalance.
# Check for duplicated rows in the dataset
duplicated_rows <- sum(duplicated(dataset))
duplicated_rows
#[1] 24

# Keep only one instance of each duplicated row
dataset_cleaned <- dataset %>% distinct() 
# Check the number of rows after removing duplicates
nrow(dataset_cleaned)
#[1] 2087
# Verify if there are still any duplicates
any(duplicated(dataset_cleaned))
#[1] FALSE

# Replace the original dataset with the cleaned one
dataset <- dataset_cleaned

# Remove the cleaned dataset variable
rm(dataset_cleaned)

# Density plot for Age
ggplot(dataset, aes(x = Age, fill = ObesityL)) +
   geom_density(alpha = 0.5) +
   ggtitle("Age Distribution by Obesity Levels")
#Some peaks appear sharp and could indicate overfitting or unnatural clustering due to synthetic data (for example, a prominent peak in "Obesity Type I" around the age of 30).
#The categories appear to be well-separated, which may help the model learn patterns effectively, but it’s essential to ensure these separations are logical and not artifacts introduced by SMOTE.

# Calculate summary statistics by obesity level
dataset %>%
+     group_by(ObesityL) %>%
+     summarize(
+         Age_Mean = mean(Age, na.rm = TRUE),
+         Age_SD = sd(Age, na.rm = TRUE),
+         Height_Mean = mean(Height, na.rm = TRUE),
+         Height_SD = sd(Height, na.rm = TRUE),
+         Weight_Mean = mean(Weight, na.rm = TRUE),
+         Weight_SD = sd(Weight, na.rm = TRUE)
+     )

#The summary statistics show relatively consistent means and standard deviations for Age, Height, and Weight across obesity levels, which suggests that SMOTE has preserved the overall distribution without introducing extreme values.
#Interpretation: Since the means and standard deviations are similar across classes, it appears SMOTE didn’t drastically alter the dataset's variability. This consistency supports the idea that SMOTE effectively balanced the classes without distorting key variable distributions.

# Perform K-means clustering and calculate silhouette score
library(cluster)
set.seed(123)
kmeans_res <- kmeans(select(dataset, where(is.numeric)), centers = length(unique(dataset$ObesityL)))
silhouette_score <- silhouette(kmeans_res$cluster, dist(select(dataset, where(is.numeric))))
mean_silhouette_score <- mean(silhouette_score[, "sil_width"])
mean_silhouette_score
#[1] 0.4565147

#Silhouette Score from K-means Clustering
#The mean silhouette score of approximately 0.456 suggests a moderate level of cohesion within clusters and some separation between them. This score indicates that the clusters (representing obesity levels) are neither too distinct nor too blended.
#Interpretation: A score close to 0.5 generally reflects reasonable class separability without excessive artificial separability. This score suggests that SMOTE has helped create distinguishable but not overly isolated clusters, which is desirable for class balance.

#We conclude that SMOTE has balanced the dataset without drastically distorting it.

#Check for unrealistic values in Height and Weight
summary(dataset$Height)
summary(dataset$Weight)

#There are no extreme data according to the summaries

library(ggplot2)
#GGplot of the distribution of Age, Weight  and Technology
ggplot(dataset, aes(x = Age)) + geom_histogram(bins = 30, fill = "blue", color = "black") + theme_minimal() + ggtitle("Age Distribution")
ggplot(dataset, aes(x = Weight)) + geom_histogram(bins = 30, fill = "green", color = "black") + theme_minimal() + ggtitle("Weight Distribution")
ggplot(dataset, aes(x = TUE)) + geom_histogram(bins = 30, fill = "red", color = "black") + theme_minimal() + ggtitle("Technology Usage Distribution (TUE)")

#GGplot of the Weight by Obesity Level
ggplot(dataset, aes(x = ObesityL, y = Weight)) + geom_boxplot(fill = "orange") + theme_minimal() + ggtitle("Weight by Obesity Level")

table(dataset$Gender)

#Female   Male 
#  1043   1068 
table(dataset$familiarity)

#  no  yes 
# 385 1726 
table(dataset$FAVC)

#  no  yes 
# 245 1866 
table(dataset$ObesityL)

#Insufficient_Weight       Normal_Weight 
#                272                 287 
# Overweight_Level_I Overweight_Level_II 
#                290                 290 
#     Obesity_Type_I     Obesity_Type_II 
#                351                 297 
#   Obesity_Type_III 
#               324 
#The dataset has a fairly balanced distribution of 1043 females and 1068 males
#There is a significant skew here: 1726 individuals reported a "yes", while only 385 reported "no". 
#This suggests that a family history of overweight could be a strong indicator or correlate of obesity, and it will be interesting to see if this variable aligns with obesity levels
#Frequent Consumption of High-Caloric Food (FAVC) --> Similar to family history, there is a clear skew: 1866 individuals report "yes" (frequent consumption of high-caloric food), while 245 say "no"

# Boxplot of Weight by ObesityL
ggplot(dataset, aes(x = ObesityL, y = Weight, fill = FAVC)) +
    geom_boxplot() +
    theme_minimal() +
    ggtitle("Boxplot of Weight by Obesity Level and High-Caloric Food Consumption") +
    labs(x = "Obesity Level", y = "Weight") +
    scale_fill_manual(values = c("no" = "lightblue", "yes" = "salmon"), name = "FAVC")

#For higher obesity types (e.g., Obesity Type I, II, and III), there is a noticeable difference in weight between those who frequently consume high-caloric food (FAVC = yes) and those who don't (FAVC = no). Those who answered "yes" to FAVC generally show higher weights.

# Stacked Bar Chart
ggplot(dataset, aes(x = ObesityL, fill = familiarity)) +
    geom_bar(position = "fill") +  # Use "fill" for proportions
    theme_minimal() +
    ggtitle("Proportion of Family History of Overweight by Obesity Level") +
    labs(x = "Obesity Level", y = "Proportion") +
    scale_fill_manual(values = c("no" = "lightblue", "yes" = "salmon"), name = "Family History")

#Implication: Family history appears to be a significant factor in the risk of obesity. This supports the idea that genetics or shared lifestyle factors play a major role in obesity.

SO we can onsider conducting further statistical tests (e.g., chi-square tests) to validate the associations observed between categorical variables.
In bulding models we need to consider these variables. We can also explore interactions between these variables and other factors (e.g., FAF, TUE) to see if there are additional layers of insight.

#Age Distribution Across Obesity Levels
ggplot(dataset, aes(x = ObesityL, y = Age, fill = ObesityL)) +
  geom_boxplot() +
  theme_minimal() +
  ggtitle("Age Distribution Across Obesity Levels") +
  labs(x = "Obesity Level", y = "Age") +
  theme(legend.position = "none")
#It might be worth exploring if certain age groups are more prone to specific obesity levels or if other factors like lifestyle and activity levels (which could change with age) play a role. Also look for outliers

# Proportion of Gender Across Obesity Levels
ggplot(dataset, aes(x = ObesityL, fill = Gender)) +
  geom_bar(position = "fill") +
  theme_minimal() +
  ggtitle("Gender Proportions Across Obesity Levels") +
  labs(x = "Obesity Level", y = "Proportion")

# Bar Plot of CAEC (Calorie Consumption Frequency) by Obesity Level
ggplot(dataset, aes(x = ObesityL, fill = CAEC)) +
     geom_bar(position = "fill") +
     theme_minimal() +
     ggtitle("Proportion of Consumption of Food Between Meals (CAEC) by Obesity Level") +
     labs(x = "Obesity Level", y = "Proportion") +
     scale_fill_brewer(palette = "Set2", name = "Calorie Consumption")
